networks:
  app-net:
    driver: bridge

volumes:
  pg_data:
  mongo_data:
  upload_data:

services:
  # --------- FRONT (Nginx servant le build Vite) ---------
  client_web:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: fs_client_web
    depends_on:
      - api
    ports:
      - "80:80"
    networks: [app-net]

  # --------- API (Node.js en prod + migrations Prisma) ---------
  api:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    container_name: fs_api
    working_dir: /usr/src/app
    env_file:
      - ./server/.env
      - ./server/.env.production
    environment:
      - NODE_ENV=production
    ports:
      - "8080:8080"    # exposé (sinon passe via reverse proxy)
    volumes:
      - upload_data:/usr/src/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started
    command: >
      sh -c "npx prisma migrate deploy && node dist/index.js"
    networks: [app-net]

  # --------- Postgres ---------
  postgres:
    image: postgres:16-alpine
    container_name: fs_postgres
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 5s
      timeout: 3s
      retries: 20
    # Pas de port exposé en prod (sécurité). Expose si besoin : "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks: [app-net]

  # --------- MongoDB ---------
  mongo:
    image: mongo:7
    container_name: fs_mongo
    # Pas de port exposé en prod (sécurité). Expose si besoin : "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks: [app-net]
